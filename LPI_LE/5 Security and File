5.1 Basic Security and Identifying User Types


System user
-> may have pw
-> no interactive login shell, no home dir, lower uid

who = who is logined now; last = history
/etc/passwd - basic information about the users on the system, including UID and GID, home directory, shell, etc. Despite the name, no passwords are stored here.
/etc/group - stores basic information about all user groups on the system, like group name and GID and members.
/etc/shadow - where user passwords are stored. They are hashed, for security.
/etc/gshadow - stores more detailed information about groups, including a hashed password which lets users temporarily become a member of the group, a list of users who can become a member of the group at and time and a list of group administrators.



/etc/passwd 

USERNAME:PASSWORD:UID:GID:GECOS:HOMEDIR:SHELL

USERNAME The username aka login (name), like root, nobody, emma.
PASSWORD Legacy location of the password hash. Almost always x, indicating that the password is stored in the file /etc/shadow.
UID User ID (UID), like 0, 99, 1024.
GID Default Group ID (GID), like 0, 99, 1024.
GECOS A CSV list of user information including name, location, phone number. For example: Emma Smith,42 Douglas St,555.555.5555
HOMEDIR Path to the user’s home directory, like /root, /home/emma, etc.
SHELL The default shell for this user, like /bin/bash, /sbin/nologin, /bin/ksh, etc.

/etc/group

NAME group name, like root, users, emma, etc.
PASSWORD legacy location of an optional group password hash. Almost always x, indicating that the password (if defined) is stored in the file /etc/gshadow.
GID Group ID (GID), like 0, 99, 1024.
MEMBERS a comma-separated list of usernames which are members of the group, like jsmith,emma.


/etc/shadow


USERNAME:PASSWORD:LASTCHANGE:MINAGE:MAXAGE:WARN:INACTIVE:EXPDATE

USERNAME The username (same as /etc/passwd), like root, nobody, emma.
PASSWORD A one-way hash of the password, including preceding salt. For example: !!, !$1$01234567$ABC…​, $6$012345789ABCDEF$012…​.
LASTCHANGE Date of the last password change in days since the “epoch”, such as 17909.
MINAGE Minimum password age in days.
MAXAGE Maximum password age in days.
WARN Warning period before password expiration, in days.
INACTIVE Maximum password age past expiration, in days.
EXPDATE Date of password expiration, in days since the “epoch”.

Password:
!! a “disabled” account (no authentication possible), with no password hash stored.
!$1$01234567$ABC… “disabled” account (due to the initial exclamation mark), with a prior hash function, hash salt and hash string stored.
$1$0123456789ABC$012…  “enabled” account, with a hash function, hash salt and hash string stored.



/etc/gshadow

= file readable only by root and by users with root privileges that contains encrypted passwords for groups, each on a separate line:
developer:$6$7QUIhUX1WdO6$H7kOYgsboLkDseFHpk04lwAtweSUQHipoxIgo83QNDxYtYwgmZTCU0qSCuCkErmyR263rvHiLctZVDR7Ya9Ai1::

Group name = The name of the group.
Encrypted password = The encrypted password for the group (it is used when a user, who is not a member of the group, wants to join the group using the newgrp command — if the password starts with !, no one is allowed to access the group with newgrp).
Group administrators = A comma-delimited list of the administrators of the group (they can change the password of the group and can add or remove group members with the gpasswd command).
Group members = A comma-delimited list of the members of the group.




5.2 Create User and Group

useradd frank
useradd -m stosh will create the user stosh and the home directory at the same time with defaults.
passwd frank (set password)
passwd -l stosh (lock his password)
userdel -r frank
usermod -a -G linuxacademy stosh  = add user stosh to linuxacademy

groupadd -g 1090 developer
groupdel developer

how to find thre group of a user

groups stosh
id stosh 
cat /etc/group | grep stosh

5.3 File permission


drwxrwxr-x

owner, group, other

First char = type
- (normal file)
d (directory)
l (soft link)
b (block device)
c (character device)
s (socket)


r  value of 4 (don’t worry, we will discuss octals shortly). This means permission to open a file and read its contents.
w  octal value of 2. This means permission to edit or delete a file.
x  octal value of 1. This means that the file can be run as an executable or script.


640 (rw- r-- ---)

groups (ls groups basically)

Sticky Bit
- cannot delete files unless it is owner
- Directories with the sticky bit set show a t replacing the x on the permissions
- drwxr-xr-t

chmod Change the permissions of a file or directory.

chmod 6755 test.sh
chmod 1755 Another_Directory
chown Change the owning user and/or group of a file or directory.
chown username:groupname filename
chown carol:students text.txt (carol does not need to be a member of the students group.)


chown -R

Set GID
Set UID






5.4 Special Directories and Files 


$ is used to designate standard user privileges.


A. Temp Files

/tmp  files written here will be preserved between invocations of a program. The recommendation is that this directory be cleared (all files erased) during system boot-up, although this is not mandatory.
/var/tmp  should not be cleared during the system boot-up, i.e. files stored here will usually persist between reboots.
/run  run-time variable data used by running processes, such as process identifier files (.pid). Programs that need more than one run-time file may create subdirectories here. This location must be cleared during system boot-up. The purpose of this directory was once served by /var/run, and on some systems /var/run may be a symbolic link to /run.

B. Hard Link

ln target.txt /home/carol/Documents/hardlink

C. Soft Link

ln -s target.txt /home/carol/Documents/softlink

ln -s a b

a = source, b = dir

Soft is not copy; its a pointer; hard is a copy


CRON JOB

To run a cron job at every quarter hour (i.e every 15th minute), add this:
*/15 * * * * <command-to-execute>

To run a cron job every hour at minute 30:
30 * * * * <command-to-execute>

